#MIT License
#Copyright (c) 2018 phR0ze
#
#Permission is hereby granted, free of charge, to any person obtaining a copy
#of this software and associated documentation files (the "Software"), to deal
#in the Software without restriction, including without limitation the rights
#to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#copies of the Software, and to permit persons to whom the Software is
#furnished to do so, subject to the following conditions:
#
#The above copyright notice and this permission notice shall be included in all
#copies or substantial portions of the Software.
#
#THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#SOFTWARE.

configs:
  base-config:
    - { apply: hosts-config }
    - { apply: fonts-config }
    - { apply: locale-config }
    - { apply: logind-config }
    - { apply: lsb-release-config }
    - { apply: journald-config }
    - { apply: makepkg-config }
    - { apply: mkinitcpio-config }
    - { apply: modprobed-config }
    - { apply: os-release-config }
    - { apply: pacman-config }
    - { apply: proxy-config }
    - { apply: resolved-config }
    - { apply: sshd-config }
    - { apply: sudo-vars-config }
    - { apply: sysctld-config }
    - { apply: syslinux-config }
    - { apply: timesyncd-config }
    - { apply: user-dirs-config }
    - { apply: vconsole-config }
    - { chroot: systemctl enable sshd.service }
    - { chroot: systemctl enable systemd-networkd.service }
    - { chroot: systemctl enable systemd-networkd-wait-online.service }
    - { chroot: systemctl enable systemd-resolved.service }
    - { chroot: systemctl enable systemd-timesyncd.service }
  shell-config:
    - { apply: wpa-config }
    - { chroot: systemctl enable cronie.service }
  lite-config:
    - { apply: lxdm-config }
    - { apply: dconf-config }
    - { apply: gtk-config }
    - { apply: openbox-config }
    - { apply: oblogout-config }
    - { apply: mimeapps-config }
    - { apply: wallpaper-config }
    - { apply: xorg-config }
  heavy-config:
    - { apply: guake-config }
    - { apply: plank-heavy-config }
  desktop-config:
    - { apply: docker-config }
    - { apply: plank-desktop-config }
    - { apply: cinnamon-screensaver-config }
  k8snode-config:
    - { apply: docker-config }
    - { chroot: systemctl enable kubelet.service }
  server-config:
    - { apply: nfs-config }
    - { apply: apache-php-config }
  build-user-config:
    - { chroot: 'useradd -m -G lp,wheel,network,storage,users -s /bin/bash build || true' }
    - { exec: 'find /<%=base_src%>/etc/skel -maxdepth 1 -type f | xargs cp -t /home/build' }
    - { edit: /etc/sudoers, append: true, value: "build ALL=(ALL) NOPASSWD: ALL" }
  apache-php-config:
    - { edit: /etc/httpd/conf/httpd.conf, regex: '^(Listen).*', value: '\1 80' }
    - { edit: /etc/httpd/conf/httpd.conf, regex: '^(DocumentRoot).*', value: '\1 /srv/http' }
    - { edit: /etc/httpd/conf/httpd.conf, regex: '^(.*DirectoryIndex index.html).*', value: '\1 index.php' }
    - { edit: /etc/httpd/conf/httpd.conf, regex: '^(LoadModule mpm_event.*)', value: '#\1' }
    - edit: /etc/httpd/conf/httpd.conf
      append: before
      regex: '<IfModule mpm_prefork'
      values:
        - "MaxMemFree 2048"
        - "LoadModule php7_module modules/libphp7.so"
        - "LoadModule mpm_prefork_module modules/mod_mpm_prefork.so"
    - edit: /etc/httpd/conf/httpd.conf
      append: after
      regex: '<IfModule mpm_prefork'
      values:
        # StartServers: number of server processes to start, default (5)
        - "    StartServers           5"
        # MinSpareServers: minimum number of server processes which are kept spare, default (5)
        - "    MinSpareServers        5"
        # MaxSpareServers: maximum number of server processes which are kept spare, default (10)
        - "    MaxSpareServers        5"
        # MaxRequestWorkers: maximum number of server processes allowed to start, default (256)
        - "    MaxRequestWorkers     100"
        # MaxConnectionsPerChild: max num of connections a server process serves before term, default (0)
        - "    MaxConnectionsPerChild 0"
    - edit: /etc/httpd/conf/httpd.conf
      append: after
      regex: 'DirectoryIndex index.html'
      values:
        - "    <IfModule php7_module>"
        - "        DirectoryIndex index.html index.php"
        - "        <FilesMatch \"\\.php$\">"
        - "            SetHandler application/x-httpd-php"
        - "        </FilesMatch>"
        - "        <FilesMatch \"\\.phps$\">"
        - "            SetHandler application/x-httpd-php-source"
        - "        </FilesMatch>"
        - "    </IfModule>"
    - { edit: /etc/php/php.ini, regex: '^(max_execution_time).*', value: '\1 = 6000' }
    - { edit: /etc/php/php.ini, regex: '^(max_input_time).*', value: '\1 = 6000' }
    - { edit: /etc/php/php.ini, regex: '^(memory_limit).*', value: '\1 = 128M' }
    - { edit: /etc/php/php.ini, regex: '^(post_max_size).*', value: '\1 = 210M' }
    - { edit: /etc/php/php.ini, regex: '^(upload_max_filesize).*', value: '\1 = 200M' }
    - { edit: /etc/php/php.ini, regex: '^;(extension=gd.so.*)', value: '\1' }
    - { edit: /etc/php/php.ini, regex: '^;(extension=gettext.so.*)', value: '\1' }
    - { edit: /etc/php/php.ini, regex: '^;(extension=pdo_sqlite.so.*)', value: '\1' }
    - { edit: /etc/php/php.ini, regex: '^;(extension=sqlite3.so.*)', value: '\1' }
    - { chroot: systemctl enable httpd.service }
  cinnamon-screensaver-config:
    - edit: /etc/dconf/db/local.d/04-cinnamon
      append: true
      values:
        - "[org/cinnamon/desktop/screensaver]\n"
        - "use-custom-format=true\n"
        - "time-format='%I:%M%P'\n\n"
        - "[org/cinnamon/desktop/background]\n"
        - "picture-uri='file://<%=wallpaper%>'\n"
    - { chroot: dconf update }
    # This file edit is an ugly hack to fix cinnamon-screensaver as it broke in a recent version
    - edit: /usr/share/glib-2.0/schemas/org.cinnamon.desktop.screensaver.gschema.xml
      append: before
      regex: '</schema>'
      values:
        - "    <key type=\"b\" name=\"logout-enabled\"><default>false</default></key>\n"
        - "    <key type=\"s\" name=\"logout-command\"><default>''</default></key>\n"
        - "    <key type=\"u\" name=\"logout-delay\"><default>7200</default></key>\n"
    - { chroot: glib-compile-schemas /usr/share/glib-2.0/schemas }
  dconf-config:
    - edit: /etc/dconf/profile/user
      append: true
      values:
        - 'user-db:user'
        - 'system-db:local'
    - edit: /usr/bin/setproxy
      append: before
      regex: 'PROXY_SETTINGS_MARKER'
      values:
        - '# Configure system proxy settings for XWindows'
        - 'if [ -e /usr/bin/Xorg ] && [ "x$proxy" != "x" ] && [ "x$enable" == "x1" ]; then'
        - '  mkdir -p /etc/dconf/db/local.d'
        - '  proxyfile=/etc/dconf/db/local.d/00-proxy'
        - '  echo "[org/gnome/system/proxy]" >> ${proxyfile}'
        - '  echo "mode=\"none\"" >> ${proxyfile}'
        - '  echo -e "ignore-hosts=${no_proxy_array}\n" >> ${proxyfile}'
        - '  echo "[org/gnome/system/proxy/ftp]" >> ${proxyfile}'
        - '  echo "host=\"${proxy_host}\"" >> ${proxyfile}'
        - '  echo -e "port=${proxy_port}\n" >> ${proxyfile}'
        - '  echo "[org/gnome/system/proxy/http]" >> ${proxyfile}'
        - '  echo "host=\"${proxy_host}\"" >> ${proxyfile}'
        - '  echo -e "port=${proxy_port}\n" >> ${proxyfile}'
        - '  echo "[org/gnome/system/proxy/https]" >> ${proxyfile}'
        - '  echo "host=\"${proxy_host}\"" >> ${proxyfile}'
        - '  echo -e "port=${proxy_port}\n" >> ${proxyfile}'
        - '  echo "[system/proxy]" >> ${proxyfile}'
        - '  echo "mode=\"none\"" >> ${proxyfile}'
        - '  echo -e "ignore-hosts=${no_proxy_array}\n" >> ${proxyfile}'
        - '  echo "[system/proxy/ftp]" >> ${proxyfile}'
        - '  echo "host=\"${proxy_host}\"" >> ${proxyfile}'
        - '  echo -e "port=${proxy_port}\n" >> ${proxyfile}'
        - '  echo "[system/proxy/http]" >> ${proxyfile}'
        - '  echo "host=\"${proxy_host}\"" >> ${proxyfile}'
        - '  echo -e "port=${proxy_port}\n" >> ${proxyfile}'
        - '  echo "[system/proxy/https]" >> ${proxyfile}'
        - '  echo "host=\"${proxy_host}\"" >> ${proxyfile}'
        - '  echo "port=${proxy_port}" >> ${proxyfile}'
        - '#else'
        - "  # dconf write /system/proxy/mode 'none'"
        - 'fi'
  docker-config:
    - edit: /usr/bin/setproxy
      append: before
      regex: 'PROXY_SETTINGS_MARKER'
      values:
        - "\n# Configure docker proxy settings"
        - 'if [ -e /usr/bin/docker ]; then'
        - '  mkdir -p /etc/systemd/system/docker.service.d'
        - '  proxyfile=/etc/systemd/system/docker.service.d/20-proxy.conf'
        - '  if [ "x$proxy" != "x" ] && [ "x$enable" == "x1" ]; then'
        - '    echo "[Service]" > ${proxyfile}'
        - '    echo "Environment=\"http_proxy=${proxy}\"" >> ${proxyfile}'
        - '    echo "Environment=\"https_proxy=${proxy}\"" >> ${proxyfile}'
        - '    echo "Environment=\"no_proxy=${no_proxy}\"" >> ${proxyfile}'
        - '  else'
        - '    rm -rf $proxyfile'
        - '  fi'
        - 'fi'
        - ''
    - { chroot: systemctl enable docker.service }
  hosts-config:
    - { exec: 'rm -f /etc/hosts' }
    - edit: /etc/hosts
      append: true
      values:
        - '127.0.0.1 localhost'
  fonts-config:
    - edit: /etc/skel/.config/fontconfig/fonts.conf
      append: true
      values:
        - "<?xml version='1.0'?>"
        - "<!DOCTYPE fontconfig SYSTEM 'fonts.dtd'>"
        - '<fontconfig>'
        - '  <!-- Set default fonts by alias -->'
        - '  <alias><family>serif</family>'
        - '    <prefer>'
        - '      <family>Source Serif Pro</family>'
        - '      <family>Liberation Serif</family>'
        - '    </prefer>'
        - '  </alias>'
        - '  <alias><family>sans-serif</family>'
        - '    <prefer>'
        - '      <family>Source Sans Pro</family>'
        - '      <family>Liberation Sans</family>'
        - '    </prefer>'
        - '  </alias>'
        - '  <alias><family>monospace</family>'
        - '    <prefer>'
        - '      <family>Inconsolata-g</family>'
        - '      <family>Source Code Pro</family>'
        - '      <family>Liberation Mono</family>'
        - '    </prefer>'
        - '  </alias>'
        - '  <!-- Override Helvetica with Adobe choice -->'
        - '  <match>'
        - '    <test name="family"><string>Helvetica</string></test>'
        - '    <edit binding="same" mode="assign" name="family"><string>Source Sans Pro</string></edit>'
        - '  </match>'
        - '  <!-- Define font family for unrecognnized fonts -->'
        - '  <alias><family>Source Code Pro</family><default><family>monospace</family></default></alias>'
        - '  <alias><family>Droid Sans Mono</family><default><family>monospace</family></default></alias>'
        - '  <!-- By default fontconfig assumes any unrecognized font is sans-serif, so -->'
        - '  <!-- the fonts above have /both/ families. "delete" applies to the first match -->'
        - '  <match>'
        - '    <test compare="eq" name="family"><string>sans-serif</string></test>'
        - '    <test compare="eq" name="family"><string>monospace</string></test>'
        - '    <edit mode="delete" name="family"/>'
        - '  </match>'
        - '  <!-- Hinting and subpixel rendering -->'
        - '  <match target="font">'
        - '    <edit mode="assign" name="rgba"><const>rgb</const></edit>'
        - '    <edit mode="assign" name="hinting"><bool>true</bool></edit>'
        - '    <edit mode="assign" name="hintstyle"><const>hintslight</const></edit>'
        - '    <edit mode="assign" name="lcdfilter"><const>lcddefault</const></edit>'
        - '    <edit mode="assign" name="antialias"><bool>true</bool></edit>'
        - '  </match>'
        - '</fontconfig>'
  gtk-config:
    - edit: /etc/dconf/db/local.d/02-gtk
      append: true
      values:
        - "[org/gtk/settings/file-chooser]\n"
        - "sort-directories-first=true\n"
    - { chroot: dconf update }
    - edit: /etc/skel/.gtkrc-2.0
      append: true
      values:
        - 'gtk-theme-name="Numix-Frost"'
        - 'gtk-icon-theme-name="Paper"'
        - 'gtk-font-name="Source Sans Pro 10"'
        - 'gtk-cursor-theme-name="xcursor-numix-frost"'
        - 'gtk-cursor-theme-size=0'
        - 'gtk-toolbar-style=GTK_TOOLBAR_ICONS'
        - 'gtk-toolbar-icon-size=GTK_ICON_SIZE_LARGE_TOOLBAR'
        - 'gtk-button-images=1'
        - 'gtk-menu-images=1'
        - 'gtk-enable-event-sounds=0'
        - 'gtk-enable-input-feedback-sounds=0'
        - 'gtk-xft-antialias=1'
        - 'gtk-xft-hinting=1'
        - 'gtk-xft-hintstyle="hintslight"'
        - 'gtk-xft-rgba="rgb"'
    - edit: /etc/skel/.config/gtk-3.0/settings.ini
      append: true
      values:
        - '[Settings]'
        - 'gtk-theme-name=Numix-Frost'
        - 'gtk-icon-theme-name=Paper'
        - 'gtk-font-name=Source Sans Pro 10'
        - 'gtk-cursor-theme-name=xcursor-numix-frost'
        - 'gtk-cursor-theme-size=0'
        - 'gtk-toolbar-style=GTK_TOOLBAR_BOTH'
        - 'gtk-toolbar-icon-size=GTK_ICON_SIZE_LARGE_TOOLBAR'
        - 'gtk-button-images=1'
        - 'gtk-menu-images=1'
        - 'gtk-enable-event-sounds=1'
        - 'gtk-enable-input-feedback-sounds=1'
        - 'gtk-xft-antialias=1'
        - 'gtk-xft-hinting=1'
        - 'gtk-xft-hintstyle=hintslight'
        - 'gtk-xft-rgba=rgb'
    - edit: /etc/skel/.icons/default/index.theme
      append: true
      values:
        - '[Icon Theme]'
        - 'Name=Default'
        - 'Comment=Default Cursor Theme'
        - 'Inherits=xcursor-numix-frost'
  guake-config:
    - { chroot: 'mkdir -p /etc/skel/.config/gconf/apps/guake/{general,style/{background,font}}' }
    - { chroot: 'touch /etc/skel/.config/gconf/apps/guake/%gconf.xml' }
    - edit: /etc/skel/.config/gconf/apps/guake/general/%gconf.xml
      append: true
      values:
        - '<?xml version="1.0"?>'
        - '<gconf>'
        - '  <entry name="use_popup" mtime="1476881725" type="bool" value="false"/>'
        - '  <entry name="history_size" mtime="1478548706" type="int" value="10000"/>'
        - '  <entry name="use_default_font" mtime="1476881725" type="bool" value="false"/>'
        - '</gconf>'
    - { chroot: 'touch /etc/skel/.config/gconf/apps/guake/style/%gconf.xml' }
    - edit: /etc/skel/.config/gconf/apps/guake/style/background/%gconf.xml
      append: true
      values:
        - '<?xml version="1.0"?>'
        - '<gconf>'
        - '  <entry name="transparency" mtime="1478548706" type="int" value="10"/>'
        - '</gconf>'
    - edit: /etc/skel/.config/gconf/apps/guake/style/font/%gconf.xml
      append: true
      values:
        - '<?xml version="1.0"?>'
        - '<gconf>'
        - '  <entry name="style" mtime="1476881725" type="string"><stringvalue>Inconsolata-g Medium 11</stringvalue></entry>'
        - '  <entry name="color" mtime="1476881725" type="string"><stringvalue>#D4D4D4D4D4D4</stringvalue></entry>'
        - '</gconf>'
  journald-config:
    - { edit: /etc/systemd/journald.conf, regex: '^#(SystemMaxUse).*', value: '\1=100M' }
  locale-config:
    - edit: /etc/locale.conf
      append: true
      values:
        - 'LANG=en_US.UTF-8'
        - 'LANGUAGE=en_US.UTF-8'
        - 'LC_ALL=en_US.UTF-8'
    - { edit: /etc/locale.gen, regex: '^#(en_US\..*)', value: '\1' }
    - { chroot: locale-gen }
    - { edit: /etc/profile.d/locale.sh, append: true, value: "export LC_COLLATE=C" }
  logind-config:
    - { edit: /etc/systemd/logind.conf, regex: '^#(KillUserProcesses)=.*', value: '\1=yes' }
    - { edit: /etc/systemd/logind.conf, regex: '^#(HandlePowerKey)=.*', value: '\1=poweroff' }
    - { edit: /etc/systemd/logind.conf, regex: '^#(HandleSuspendKey)=.*', value: '\1=suspend' }
    - { edit: /etc/systemd/logind.conf, regex: '^#(HandleHibernateKey)=.*', value: '\1=hibernate' }
    - { edit: /etc/systemd/logind.conf, regex: '^#(HandleLidSwitch)=.*', value: '\1=suspend' }
    - { edit: /etc/systemd/logind.conf, regex: '^#(HandleLidSwitchDocked)=.*', value: '\1=ignore' }
  lsb-release-config:
    - { exec: 'rm -f /etc/lsb-release' }
    - edit: /etc/lsb-release
      append: true
      values:
        - 'LSB_VERSION=1.4'
        - 'DISTRIB_ID=<%=distro%>'
        - 'DISTRIB_RELEASE=rolling'
        - 'DISTRIB_DESCRIPTION=<%=distro%>'
  lxdm-config:
    - { exec: ln -sf //usr/lib/systemd/system/lxdm.service /etc/systemd/system/display-manager.service }
    - { edit: /usr/share/lxdm/themes/Industrial/gtk.css, regex: '^(\s*font: Sans).*', value: '\1 18;' }
    - { edit: /usr/share/lxdm/themes/Industrial/gtk.css, regex: '^(\s*color:) #000000.*', value: '\1 #ffffff;' }
    - { edit: /etc/lxdm/lxdm.conf, regex: '^#\s*(session)=.*', value: '\1=/usr/bin/openbox-session' }
    - { edit: /etc/lxdm/lxdm.conf, regex: '^#\s*(numlock)=.*', value: '\1=1' }
    - { edit: /etc/lxdm/lxdm.conf, regex: '^(gtk_theme)=.*', value: '\1=<%=distro%>' }
    - { edit: /etc/lxdm/lxdm.conf, regex: '^#\s*(bg)=.*', value: '\1=<%=wallpaper%>' }
    - { edit: /etc/lxdm/lxdm.conf, regex: '^(bottom_pane)=.*', value: '\1=0' }
    - { edit: /etc/lxdm/lxdm.conf, regex: '^(theme)=.*', value: '\1=Industrial' }
    - { edit: /etc/lxdm/lxdm.conf, regex: '^(disable)=.*', value: '\1=1' }
    - { exec: rm -f /etc/lxdm/PostLogout }
    - edit: /etc/lxdm/PostLogout
      append: true
      values:
        - '#!/bin/sh'
        - 'killall conky'
        - "ps --user $USER | awk 'NR > 1 {print $1}' | xargs -t kill"
    - { exec: rm -f /etc/lxdm/PreLogin }
    - edit: /etc/lxdm/PreLogin
      append: true
      values:
        - '#!/bin/sh'
        - 'xset m 6/1 4                                    # Configure mouse'
        - 'display=$(xrandr | grep connected | sed -e "s/^\([A-Z0-9-]\+\).*/\1/")'
        - 'resolution="1024x768"'
        - 'if [ "$resolution" == "1920x1080" ]; then'
        - '    xrandr --newmode $resolution $(cvt 1920 1080 | tail -1 | sed "s/Modeline.*\"  \(.*\)/\1/g")'
        - '    xrandr --addmode $display $resolution'
        - 'fi'
        - 'xrandr --output $display --mode $resolution'
        - '(sleep 1s && xset s off -dpms) &                # Disable DPMS and prevent screen blanking'
  makepkg-config:
    - { edit: /etc/makepkg.conf, regex: '^#(MAKEFLAGS)=.*', value: '\1="-j8"' }
    - { edit: /etc/makepkg.conf, regex: '^(COMPRESSXZ)=.*', value: '\1=(xz -c -z - --threads=0)' }
  mimeapps-config:
    - edit: /etc/skel/.config/mimeapps.list
      append: true
      values:
        - '[Default Applications]'
        - 'application/x-executable=geany.desktop;'
        - 'application/pdf=evince.desktop;'
        - 'text/plain=leafpad.desktop;'
        - 'application/xml=geany.desktop;'
        - 'application/x-shellscript=geany.desktop;'
        - 'image/png=gpicview.desktop;'
        - 'inode/directory=thunar.deskop;'
        - '[Added Associations]'
        - 'audio/mpeg=audacious.desktop;'
        - 'audio/x-wav=audacious.desktop;'
        - 'application/pdf=evince.desktop;'
        - 'application/msword=libreoffice-writer.desktop;'
        - 'application/rtf=libreoffice-writer.desktop;'
        - 'application/vnd.ms-powerpoint=libreoffice-impress.desktop;'
        - 'application/vnd.openxmlformats-officedocument.wordprocessingml.document=libreoffice-writer.desktop;'
        - 'application/xml=geany.desktop;'
        - 'application/x-shellscript=geany.desktop;'
        - 'image/gif=gpicview.desktop;'
        - 'image/jpeg=gpicview.desktop;'
        - 'image/png=gpicview.desktop;'
        - 'inode/directory=thunar.deskop;'
        - 'text/csv=libreoffice-calc.desktop;'
        - 'text/plain=leafpad.desktop;'
        - 'text/html=chromium.desktop;'
        - 'video/quicktime=smplayer.desktop;'
        - 'video/x-matroska=smplayer.desktop;'
        - 'video/mp4=smplayer.desktop;'
        - 'video/mpeg=smplayer.desktop;'
  mkinitcpio-config:
    - edit: /etc/mkinitcpio.conf
      regex: '^(HOOKS).*'
      value: '\1="base udev autodetect vt-colors modconf block filesystems keyboard"'
  modprobed-config:
    - { edit: /etc/modprobe.d/pcspkr.conf, append: true, value: "blacklist pcspkr" }
  nfs-config:
    - edit: /etc/exports
      append: true
      values:
        - '/srv/nfs/Cache       <%=nfscidr%>(rw,no_subtree_check,nohide,no_root_squash)'
        - '/srv/nfs/Documents   <%=nfscidr%>(rw,no_subtree_check,nohide)'
        - '/srv/nfs/Install     <%=nfscidr%>(rw,no_subtree_check,nohide)'
        - '/srv/nfs/Media       <%=nfscidr%>(rw,no_subtree_check,nohide)'
        - '/srv/nfs/Pictures    <%=nfscidr%>(rw,no_subtree_check,nohide)'
        - '/srv/nfs/Other       <%=nfscidr%>(rw,no_subtree_check,nohide)'
    - { chroot: 'mkdir -p /srv/nfs/{Cache,Documents,Install,Media,Pictures,Other}' }
    - { chroot: "echo 'options nfs nfs4_disable_idmapping=0' > /etc/modprobe.d/nfs.conf" }
    # Share pacman cache with other machines on the LAN
    - { edit: /etc/fstab, append: true, value: "/var/cache/pacman/pkg /srv/nfs/Cache none bind 0 0" }
    # Manually mount on client side with this
    #- { edit: /etc/fstab, append: true, value: serverip:/srv/nfs/Cache /var/cache/pacman/pkg nfs auto,noatime,rsize=8192,wsize=8192,timeo=14,_netdev 0 0
    - { chroot: systemctl enable nfs-server.service }
  oblogout-config:
    - edit: /etc/oblogout.conf
      append: true
      values:
        - '[settings]'
        - 'usehal = false'
        - '[looks]'
        - 'opacity = 70'
        - 'bgcolor = black'
        - 'buttontheme = foom'
        - 'buttons = logout, restart, shutdown, lock'
        - '[shortcuts]'
        - 'cancel = Escape'
        - 'logout = E'
        - 'restart = R'
        - 'shutdown = S'
        - 'lock = L'
        - '[commands]'
        - 'logout = openbox --exit'
        - 'restart = systemctl reboot'
        - 'shutdown = systemctl poweroff'
        - 'lock = cinnamon-screensaver-command --lock'
  openbox-config:
    - edit: /etc/skel/.config/openbox/autostart
      append: true
      values:
        - '## Autostart file'
        - 'export GTK2_RC_FILES="$HOME/.gtkrc-2.0" '
        - "\n# Ensure D-Bus Communication for file management, auth, and other system processes"
        - 'if which dbus-launch >/dev/null && test -z "$DBUS_SESSION_BUS_ADDRESS"; then'
        - '    eval "$(dbus-launch --sh-syntax --exit-with-session)"'
        - 'fi'
        - "\n# Generate home directories if they don't exist"
        - '[ -x /usr/bin/xdg-user-dirs-update ] && /usr/bin/xdg-user-dirs-update'
        - "\n# Configure X resources"
        - 'xrdb -merge ~/.Xresources'
    - edit: /etc/skel/.config/openbox/environment
      append: true
      values:
        - '# Source the user rc file if it exists'
        - '[ -r ~/.bashrc ] && source ~/.bashrc'
  pacman-config:
    - { exec: 'rm -f /etc/pacman.d/gnupg/dirmngr.conf' }
    - { edit: /etc/pacman.d/gnupg/dirmngr.conf, append: true, value: "honor-http-proxy" }
    - { edit: /etc/pacman.d/gnupg/gpg.conf, regex: '^keyserver\s.*', value: 'keyserver http://ipv4.pool.sks-keyservers.net' }
    - { chroot: "bash -c 'haveged -r 0 && pacman-key --init'" }
    - { chroot: 'pacman-key --populate archlinux antergos blackarch' }
    - { chroot: 'pacman -Sy' }
  plank-desktop-config:
    - { edit: /etc/dconf/db/local.d/03-plank, regex: "(dock-items.*)(,'filezilla.*)", value: "\\1,'virtualbox.dockitem'\\2" }
    - { edit: /etc/dconf/db/local.d/03-plank, regex: '(dock-items.*)(\].*)', value: "\\1,'calc.dockitem','writer.dockitem'\\2" }
    - { edit: /etc/skel/.config/plank/dock1/launchers/calc.dockitem, append: true, values: ["[PlankDockItemPreferences]", "Launcher=file:///usr/share/applications/libreoffice-calc.desktop"]}
    - { edit: /etc/skel/.config/plank/dock1/launchers/virtualbox.dockitem, append: true, values: ["[PlankDockItemPreferences]", "Launcher=file:///usr/share/applications/virtualbox.desktop"]}
    - { edit: /etc/skel/.config/plank/dock1/launchers/writer.dockitem, append: true, values: ["[PlankDockItemPreferences]", "Launcher=file:///usr/share/applications/libreoffice-writer.desktop"]}
  plank-heavy-config:
    - edit: /etc/dconf/db/local.d/03-plank
      append: true
      values:
        - '[net/launchpad/plank/docks/dock1]'
        - "hide-mode='window-dodge'"
        - 'icon-size=36'
        - "position='top'"
        - "dock-items=['lxterminal.dockitem','thunar.dockitem','xnviewmp.dockitem','smplayer.dockitem','vlc.dockitem','ghb.dockitem','filezilla.dockitem','chromium.dockitem']"
        - "lock-items=true"
        - "pinned-only=true"
        - "theme='Transparent'"
    - { edit: /etc/skel/.config/plank/dock1/launchers/lxterminal.dockitem, append: true, values: ["[PlankDockItemPreferences]", "Launcher=file:///usr/share/applications/lxterminal.desktop"]}
    - { edit: /etc/skel/.config/plank/dock1/launchers/thunar.dockitem, append: true, values: ["[PlankDockItemPreferences]", "Launcher=file:///usr/share/applications/Thunar.desktop"]}
    - { edit: /etc/skel/.config/plank/dock1/launchers/xnviewmp.dockitem, append: true, values: ["[PlankDockItemPreferences]", "Launcher=file:///usr/share/applications/xnviewmp.desktop"]}
    - { edit: /etc/skel/.config/plank/dock1/launchers/smplayer.dockitem, append: true, values: ["[PlankDockItemPreferences]", "Launcher=file:///usr/share/applications/smplayer.desktop"]}
    - { edit: /etc/skel/.config/plank/dock1/launchers/vlc.dockitem, append: true, values: ["[PlankDockItemPreferences]", "Launcher=file:///usr/share/applications/vlc.desktop"]}
    - { edit: /etc/skel/.config/plank/dock1/launchers/ghb.dockitem, append: true, values: ["[PlankDockItemPreferences]", "Launcher=file:///usr/share/applications/ghb.desktop"]}
    - { edit: /etc/skel/.config/plank/dock1/launchers/filezilla.dockitem, append: true, values: ["[PlankDockItemPreferences]", "Launcher=file:///usr/share/applications/filezilla.desktop"]}
    - { edit: /etc/skel/.config/plank/dock1/launchers/chromium.dockitem, append: true, values: ["[PlankDockItemPreferences]", "Launcher=file:///usr/share/applications/chromium.desktop"]}
    - { chroot: dconf update }
  os-release-config:
    - { exec: 'rm -f /etc/os-release' }
    - edit: /etc/os-release
      append: true
      values:
        - 'NAME=<%=distro%>'
        - 'ID=<%=distro%>'
        - 'VERSION=<%=release%>'
        - 'PRETTY_NAME=<%=distro%>'
  proxy-config:
    - edit: /usr/bin/setproxy
      append: true
      values:
        - '#!/bin/bash'
        - "\n# Executed by Vagrantfile for vagrant deployments"
        - "# Executed by installer for non-vagrant deployments"
        - 'enable=$1'
        - 'proxy='
        - 'proxy_host='
        - 'proxy_port='
        - 'no_proxy='
        - 'no_proxy_array='
        - "\n# Configure system proxies for shell"
        - 'proxyfile=/etc/profile.d/setproxy.sh'
        - 'if [ "x$proxy" != "x" ] && [ "x$enable" == "x1" ]; then'
        - '  echo "export ftp_proxy=${proxy}" > $proxyfile'
        - '  echo "export http_proxy=${proxy}" >> $proxyfile'
        - '  echo "export https_proxy=${proxy}" >> $proxyfile'
        - '  [ $no_proxy ] && echo "export no_proxy=${no_proxy}" >> $proxyfile'
        - '  chmod +x $proxyfile'
        - 'else'
        - '  rm -rf $proxyfile'
        - 'fi'
        - "\n# PROXY_SETTINGS_MARKER"
    - { exec: chmod +x /usr/bin/setproxy }
  remove-docs:
    - { exec: 'rm -rf /usr/share/{man,doc}' }
  resolved-config:
    - { exec: ln -sf //run/systemd/resolve/resolv.conf /etc/resolv.conf }
  root-user-config:
    - { exec: "echo 'TERM=xterm' > /etc/environment" }
    - { exec: 'find /<%=base_src%>/etc/skel -maxdepth 1 -type f | xargs cp -t /root' }
  sshd-config:
    - { edit: /etc/ssh/sshd_config, regex: '^#(PermitRootLogin).*', value: '\1 no' }
    - { edit: /etc/ssh/sshd_config, regex: '^#(PermitEmptyPasswords).*', value: '\1 no' }
    - { edit: /etc/ssh/sshd_config, regex: '^#(UsePrivilegeSeparation).*', value: '\1 sandbox' }
  sudo-vars-config:
    - edit: /etc/sudoers
      append: true
      value: 'Defaults env_keep += "ftp_proxy http_proxy https_proxy no_proxy"'
  sysctld-config:
    - { edit: '/etc/sysctl.d/10-<%=distro%>.conf', append: true, value: "vm.swappiness = 1" }
    - { edit: '/etc/sysctl.d/10-<%=distro%>.conf', append: true, value: "net.ipv4.ip_forward = 1" }
    - { edit: '/etc/sysctl.d/10-<%=distro%>.conf', append: true, value: "net.ipv6.conf.all.forwarding = 0" }
  syslinux-config:
    - { exec: 'rm -f /boot/syslinux/syslinux.cfg' }
    - edit: /boot/syslinux/syslinux.cfg
      append: true
      values:
        - 'PROMPT 0                     # Set to 1 to show menu'
        - 'TIMEOUT 0                    # Time to show menu in 1/10 s so 50=5s'
        - 'DEFAULT <%=distro%>'
        - 'LABEL <%=distro%>'
        - '    MENU LABEL <%=distro%>'
        - '    LINUX ../vmlinuz-linux'
        - '    APPEND root=LABEL=root rw ipv6.disable=1 vga=791'
        - '    INITRD ../initramfs-linux.img'
  timesyncd-config:
    - { exec: 'rm -f /etc/systemd/timesyncd.conf' }
    - edit: /etc/systemd/timesyncd.conf
      append: true
      values:
        - '[Time]'
        - 'NTP=0.arch.pool.ntp.org 1.arch.pool.ntp.org 2.arch.pool.ntp.org 3.arch.pool.ntp.org'
        - 'FallbackNTP=0.pool.ntp.org 1.pool.ntp.org 0.fr.pool.ntp.org'
  user-dirs-config:
    - { exec: 'rm -f /etc/xdg/user-dirs.defaults' }
    - edit: /etc/xdg/user-dirs.defaults
      append: true
      values:
        - 'DESKTOP=Desktop'
        - 'DOCUMENTS=Documents'
        - 'DOWNLOAD=Downloads'
        - 'PROJECTS=Projects'
        - 'SCRIPTS=bin'
  vconsole-config:
    - {edit: /etc/vconsole.conf, append: true, value: 'KEYMAP=us' }
  wallpaper-config:
    - edit: /etc/skel/.config/nitrogen/bg-saved.cfg
      append: true
      values:
        - '[xin_-1]'
        - 'file=<%=wallpaper%>'
        - 'mode=4'
        - 'bgcolor=#000000'
    - edit: /etc/skel/.config/nitrogen/nitrogen.cfg
      append: true
      values:
        - '[geometry]'
        - 'posx=89'
        - 'posy=70'
        - 'sizex=839'
        - "sizey=643\n"
        - '[nitrogen]'
        - 'view=icon'
        - 'recurse=true'
        - 'sort=alpha'
        - 'icon_caps=false'
        - 'dirs=/usr/share/wallpaper;'
  wpa-config:
    - edit: /etc/wpa_supplicant/wpa_supplicant-wlo1.conf
      append: true
      values:
        - 'ctrl_interface=/run/wpa_supplicant'
        - 'ctrl_interface_group=wheel'
        - 'update_config=1'
        - 'ap_scan=1'
  xorg-config:
    - edit: /etc/X11/xorg.conf.d/30-touchpad.conf
      append: true
      values:
        - 'Section "InputClass"'
        - '    Identifier "Touchpad"'
        - '    Driver "libinput"'
        - '    MatchIsTouchpad "on"'
        - '    Option "Tapping" "on"'
        - '    Option "AccelSpeed" "1"'
        - '    Option "NaturalScrolling" "on"'
        - 'EndSection'
